<Window x:Class="MusCat.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:converters="clr-namespace:MusCat.Converters"
        xmlns:viewModels="clr-namespace:MusCat.ViewModels"
        xmlns:controls="clr-namespace:MusCat.Controls"
        Title="MusCat"
        Height="780" Width="1000"
        Icon="{StaticResource AppIcon}">
    <Window.Background>
        <LinearGradientBrush>
            <GradientStop Color="#001122" Offset="0" />
            <GradientStop Color="#ff77bb" Offset="2.5" />
        </LinearGradientBrush>
    </Window.Background>
    
    <Window.DataContext>
        <viewModels:MainViewModel />
    </Window.DataContext>

    <!-- Keyboard command bindings -->
    <!-- ENTER  -  view info of a performer or an album (depending on current selection) -->
    <!-- DELETE -  delete a performer or an album (depending on current selection) -->
    <!-- F4     -  edit a performer or an album (depending on current selection) -->
    <!-- Ctrl+N -  add new performer -->
    <!-- Ctrl+A -  add new album -->
    <Window.InputBindings>
        <KeyBinding Command="{Binding GeneralViewCommand}" Key="Enter"/>
        <KeyBinding Command="{Binding GeneralDeleteCommand}" Key="Delete"/>
        <KeyBinding Command="{Binding GeneralEditCommand}" Key="F4"/>
        <KeyBinding Command="{Binding AddPerformerCommand}" Modifiers="Control" Key="P"/>
        <KeyBinding Command="{Binding AddAlbumCommand}" Modifiers="Control" Key="A"/>
    </Window.InputBindings>

    <!-- Mouse double click is analogous to pressing ENTER key -->
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="MouseDoubleClick">
            <i:InvokeCommandAction Command="{Binding Path=GeneralViewCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <Window.Resources>
        <!-- GUI parameters -->
        <sys:Double x:Key="AlbumImageWidth">100</sys:Double>
        <sys:Double x:Key="AlbumImageHeight">100</sys:Double>
        <sys:Double x:Key="PerformerPhotoWidth">125</sys:Double>
        <sys:Double x:Key="PerformerPhotoHeight">85</sys:Double>
        <sys:Double x:Key="SelectedPerformerPhotoWidth">200</sys:Double>
        <sys:Double x:Key="SelectedPerformerPhotoHeight">150</sys:Double>
        
        <!-- converters -->
        <converters:PhotoConverter x:Key="PhotoConverter"/>
        <converters:RateConverter x:Key="RateConverter"/>
        <converters:AlbumCountConverter x:Key="AlbumCountConverter"/>
        <converters:YearsConverter x:Key="YearsConverter"/>

        <!-- menu items style -->
        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Margin" Value="5"/>
            <Style.Triggers>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Foreground" Value="LightCoral"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- style for an album rate textblock: we show "Not rated" only if the rate is null;
             otherwise, the textblock is hidden and the 5-star panel is visible -->
        <Style x:Key="RateTextBlock" TargetType="TextBlock">
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Rate}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <!-- album data template -->
        <DataTemplate x:Key="AlbumTemplate">
            <StackPanel Orientation="Vertical">
                <Grid VerticalAlignment="Top">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="14"/>
                        <RowDefinition Height="110" />
                        <RowDefinition Height="40" />
                        <RowDefinition Height="20" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" 
                               Text="{Binding Path=Id, StringFormat=#{0}}"
                               TextWrapping="WrapWithOverflow" 
                               FontSize="12" FontFamily="Segoe UI" 
                               Foreground="Black"
                               Margin="0,-1,0,-1" />
                    <Image Grid.Row="1" 
                           Source="{Binding Converter={StaticResource PhotoConverter},
                                            ConverterParameter={StaticResource AlbumImageHeight},
                                            UpdateSourceTrigger=PropertyChanged}"
                           Height="{StaticResource AlbumImageHeight}"
                           Width="{StaticResource AlbumImageWidth}"
                           VerticalAlignment="Top" 
                           Margin="5">
                        <Image.Effect>
                            <DropShadowEffect Color="Black" BlurRadius="15"/>
                        </Image.Effect>
                    </Image>
                    <TextBlock Grid.Row="2" 
                               Text="{Binding Path=Name}"
                               TextAlignment="Center" TextWrapping="WrapWithOverflow"
                               VerticalAlignment="Center" 
                               Margin="1" Width="150"
                               FontSize="14" FontFamily="Segoe UI"
                               Foreground="LightYellow" />
                    <TextBlock Grid.Row="3" 
                               Text="{Binding Path=ReleaseYear}"
                               TextWrapping="WrapWithOverflow" TextAlignment="Center"
                               Margin="1" Width="110"
                               FontSize="12" FontFamily="Segoe UI"
                               Foreground="#ffbb88" />
                    <StackPanel Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Center">
                        <controls:RateStarsControl Rate="{Binding Path=Rate}"
                                                   Height="20" Width="100"
                                                   IsEnabled="False" />
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Rate}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                    </StackPanel>
                    <TextBlock Grid.Row="4"
                               Style="{StaticResource RateTextBlock}"
                               Text="{Binding Converter={StaticResource RateConverter}}"
                               FontSize="12"
                               Foreground="Black"
                               HorizontalAlignment="Center" Margin="5"/>
                </Grid>
            </StackPanel>
        </DataTemplate>

        <!-- album style -->
        <Style TargetType="{x:Type ListBoxItem}" x:Key="AlbumContainerStyle">
            <Setter Property="ContentTemplate" Value="{StaticResource AlbumTemplate}" />
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightYellow"/>
            </Style.Resources>
        </Style>

        <!-- performer rate info panel style -->
        <Style TargetType="{x:Type StackPanel}" x:Key="PerformerRateStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=AlbumCollectionRate}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <!-- performer template (not selected by user) -->
        <DataTemplate x:Key="PerformerTemplate">
            <StackPanel Orientation="Horizontal">
                <!-- uncomment this if you want performer's photo to be shown as rectangle  -->
                <!--
                <Image Height="{StaticResource PerformerPhotoHeight}" Width="{StaticResource PerformerPhotoWidth}" Margin="15,10,15,25" 
                       Source="{Binding Path=Performer, Converter={StaticResource PhotoConverter},
                                        ConverterParameter={StaticResource PerformerPhotoHeight},
                                        UpdateSourceTrigger=PropertyChanged}">
                    <Image.Clip>
                        <EllipseGeometry RadiusX="65" RadiusY="40" Center="65,40"/>
                    </Image.Clip>
                </Image>
                -->
                <Ellipse Width="95" Height="95" Margin="15,10,15,15">
                    <Ellipse.Fill>
                        <ImageBrush ImageSource="{Binding Converter={StaticResource PhotoConverter},
                                                          ConverterParameter={StaticResource PerformerPhotoHeight},
                                                          UpdateSourceTrigger=PropertyChanged}"
                                    Stretch="UniformToFill"/>
                    </Ellipse.Fill>
                </Ellipse>
                <StackPanel>
                    <Label Content="{Binding Path=Name}"
                           FontSize="24" FontFamily="Stencil" 
                           Foreground="LightYellow"
                           Padding="0,5,0,0" />
                    <DockPanel>
                        <StackPanel Margin="0,0,2,0">
                            <Label Content="{Binding Path=AlbumCollectionRate, Converter={StaticResource RateConverter}}"
                                   Foreground="White"
                                   FontSize="18" FontFamily="Arial Narrow"
                                   Padding="1,1,10,1" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Style="{StaticResource PerformerRateStyle}">
                            <controls:RateStarsControl Rate="{Binding Path=AlbumCollectionRate}"
                                                       Width="75" Height="15"
                                                       IsEnabled="False" />
                        </StackPanel>
                    </DockPanel>
                    <Label Content="{Binding Path=AlbumCount, Converter={StaticResource AlbumCountConverter}}"
                           FontSize="16" FontFamily="Arial Narrow"
                           Foreground="LightPink"
                           Padding="1" />
                    <Label Content="{Binding Converter={StaticResource YearsConverter}}"
                           FontSize="16" FontFamily="Arial Narrow"
                           Foreground="LightGreen"
                           Padding="1" />
                </StackPanel>
            </StackPanel>
        </DataTemplate>

        <!-- when performer is selected by user, the country of origin and the list of albums are additionally shown -->
        <DataTemplate x:Key="SelectedPerformerTemplate">
            <Grid>
                <Rectangle Grid.Column="0"
                           RadiusX="7" RadiusY="7"
                           Margin="5"
                           Fill="#ffddee" Opacity="0.5" />
                <StackPanel Grid.Column="0"
                            Orientation="Horizontal" VerticalAlignment="Top"
                            Background="Transparent" >
                    <StackPanel Margin="5,5,35,5" HorizontalAlignment="Center">
                        <!-- uncomment this if you want performer's photo to be shown as rectangle  -->
                        <!--
                        <Image Height="{StaticResource SelectedPerformerPhotoHeight}" Width="{StaticResource SelectedPerformerPhotoWidth}" Margin="15,10,15,5"
                               Source="{Binding Path=Performer, Converter={StaticResource PhotoConverter},
                                                ConverterParameter={StaticResource SelectedPerformerPhotoHeight},
                                                UpdateSourceTrigger=PropertyChanged}">
                            <Image.Clip>
                                <EllipseGeometry RadiusX="100" RadiusY="75" Center="100,75"/>
                            </Image.Clip>
                        </Image>
                        -->
                        <Ellipse Width="200" Height="140" Margin="15,10,15,5">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="{Binding Converter={StaticResource PhotoConverter},
                                            ConverterParameter={StaticResource SelectedPerformerPhotoHeight},
                                            UpdateSourceTrigger=PropertyChanged}"
                                        Stretch="UniformToFill"/>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Label Content="{Binding Path=AlbumCollectionRate, Converter={StaticResource RateConverter}}"
                               FontSize="20" FontFamily="Arial Narrow"
                               Foreground="DarkGreen" Background="Orange"
                               Padding="10" Margin="0,-35,0,0"
                               HorizontalAlignment="Right">
                            <Label.RenderTransform>
                                <RotateTransform Angle="-25"/>
                            </Label.RenderTransform>
                            <Label.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="10"/>
                            </Label.Effect>
                        </Label>
                        <Label Content="{Binding Name}"
                               FontSize="26" FontFamily="Stencil"
                               Foreground="Black"
                               Margin="0,-10,0,0" HorizontalAlignment="Center" />
                        <StackPanel HorizontalAlignment="Center" Margin="0,-5,0,15">
                            <Label Content="{Binding Country.Name}"
                                   FontSize="16" FontFamily="Arial Narrow"
                                   Foreground="Black"
                                   Padding="1" HorizontalAlignment="Center" />
                            <StackPanel Style="{StaticResource PerformerRateStyle}"
                                        Orientation="Horizontal" HorizontalAlignment="Center" >
                                <controls:RateStarsControl Rate="{Binding Path=AlbumCollectionRate}"
                                                           Width="75" Height="15"
                                                           IsEnabled="False" />
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                    <ListBox ItemsSource="{Binding Path=Albums}"                        
                             ItemContainerStyle="{StaticResource AlbumContainerStyle}"
                             SelectedItem="{Binding Path=SelectedAlbum}"
                             Tag="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}},
                                           Path=DataContext}"
                             HorizontalAlignment="Stretch" 
                             Background="Transparent" BorderThickness="0">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" IsItemsHost="True" />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="View album..."
                                      Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}},
                                                        Path=PlacementTarget.Tag.ViewAlbumCommand}">
                                    <MenuItem.Icon>
                                        <Image Source="{StaticResource ImagePlayButton}" Width="20" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Edit album..."
                                      Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}},
                                                        Path=PlacementTarget.Tag.EditAlbumCommand}"/>
                                <MenuItem Header="Remove"
                                      Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}},
                                                        Path=PlacementTarget.Tag.DeleteAlbumCommand}"/>
                            </ContextMenu>
                        </ListBox.ContextMenu>
                    </ListBox>
                </StackPanel>
            </Grid>
        </DataTemplate>
        
        <!-- performer style -->
        <Style TargetType="{x:Type ListBoxItem}" x:Key="PerformerContainerStyle">
            <Setter Property="ContentTemplate" Value="{StaticResource PerformerTemplate}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Grid>
                            <Border x:Name="Border" Background="Transparent"/>
                            <ContentPresenter></ContentPresenter>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ListBoxItem.IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderThickness" Value="0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="ContentTemplate" Value="{StaticResource SelectedPerformerTemplate}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- style for index letters -->
        <Style x:Key="IndexLetterStyle" TargetType="Button" BasedOn="{StaticResource MusCatButton}">
            <Style.Triggers>
                <!-- when letter is activated -->
                <DataTrigger Binding="{Binding IsActive}" Value="True">
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Width" Value="72" />
                    <Setter Property="Height" Value="48" />
                    <Setter Property="FontSize" Value="18" />
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <RotateTransform Angle="-3" />
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <!-- inactive state -->
                <DataTrigger Binding="{Binding IsActive}" Value="False">
                    <Setter Property="FontSize" Value="16" />
                    <Setter Property="Margin" Value="5,0,5,0" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Cursor" Value="Hand" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- style for index pages -->
        <Style x:Key="IndexPageStyle" TargetType="TextBlock">
            <Style.Triggers>
                <!-- when page is activated -->
                <DataTrigger Binding="{Binding IsActive}" Value="True">
                    <Setter Property="TextDecorations" Value="None" />
                    <Setter Property="FontSize" Value="18" />
                    <Setter Property="Margin" Value="5,-3,5,12" />
                </DataTrigger>
                <!-- inactive state -->
                <DataTrigger Binding="{Binding IsActive}" Value="False">
                    <Setter Property="Margin" Value="2,0,2,0" />
                    <Setter Property="TextDecorations" Value="Underline" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="70" />
            <RowDefinition Height="*" />
            <RowDefinition Height="40" />
        </Grid.RowDefinitions>
        <!-- Main menu -->        
        <Menu HorizontalAlignment="Stretch" VerticalAlignment="Top" Grid.Row="0" Background="Transparent" FontSize="14">
            <MenuItem Header="Performers" Foreground="Wheat">
                <MenuItem Command="{Binding Path=AddPerformerCommand}" Header="Add..." HorizontalAlignment="Left"/>
                <MenuItem Command="{Binding Path=EditPerformerCommand}" Header="Edit..." HorizontalAlignment="Left"/>
                <MenuItem Command="{Binding Path=DeletePerformerCommand}" Header="Remove" HorizontalAlignment="Left"/>
                <MenuItem Command="{Binding Path=EditMusiciansCommand}" Header="Musicians..." HorizontalAlignment="Left"/>
                <MenuItem Command="{Binding Path=EditCountriesCommand}" Header="Countries..." HorizontalAlignment="Left"/>
            </MenuItem>
            <MenuItem Header="Album" Foreground="Wheat">
                <MenuItem Command="{Binding Path=AddAlbumCommand}" Header="Add..." HorizontalAlignment="Left"/>
                <MenuItem Command="{Binding Path=EditAlbumCommand}" Header="Edit..." HorizontalAlignment="Left"/>
                <MenuItem Command="{Binding Path=DeleteAlbumCommand}" Header="Remove" HorizontalAlignment="Left"/>
            </MenuItem>
            <MenuItem Command="{Binding Path=StatsCommand}" Header="Stats" Foreground="Wheat"/>
            <MenuItem Command="{Binding Path=SettingsCommand}" Header="Settings" Foreground="Wheat"/>
            <MenuItem Command="{Binding Path=StartRadioCommand}" Header="MusCatRadio" Foreground="Wheat"/>
            <MenuItem Command="{Binding Path=HelpCommand}" Header="Help" Foreground="Wheat"/>
        </Menu>
        <!-- upper navigation panel-->
        <WrapPanel Grid.Row="1" 
                   Margin="10" 
                   HorizontalAlignment="Center" VerticalAlignment="Center">
            <ItemsControl ItemsSource="{Binding Path=LetterCollection}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button Command="{Binding RelativeSource ={RelativeSource FindAncestor, AncestorType={x:Type Window}},
                                           Path=DataContext.IndexLetterCommand}"
                                CommandParameter="{Binding Text}"
                                Style="{StaticResource IndexLetterStyle}"
                                Background="Transparent" Foreground="Wheat" Opacity="0.9"
                                FontFamily="Stencil"
                                Content="{Binding Text}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </WrapPanel>
        <!-- main area (list of performers) -->
        <ListBox Grid.Row="2"
                 ItemsSource="{Binding Path=Performers}"
                 ItemContainerStyle="{StaticResource PerformerContainerStyle}"
                 IsSynchronizedWithCurrentItem="False"
                 SelectedItem="{Binding Path=SelectedPerformer}"
                 Width="auto" 
                 HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" 
                 BorderThickness="0" Background="Transparent">
            <ListBox.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="View..." Command="{Binding Path=ViewPerformerCommand}">
                        <MenuItem.Icon>
                            <Image Source="{StaticResource ImagePlayButton}" Width="20" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Edit..." Command="{Binding Path=EditPerformerCommand}"/>
                    <MenuItem Header="Remove" Command="{Binding Path=DeletePerformerCommand}"/>
                    <Separator/>
                    <MenuItem Header="Add album..." Command="{Binding Path=AddAlbumCommand}"/>
                </ContextMenu>
            </ListBox.ContextMenu>
        </ListBox>
        <!-- lower panel -->
        <DockPanel Grid.Row="3" Margin="10,0,10,0" VerticalAlignment="Center">
            <!-- includes panel of search filters... -->
            <Expander ExpandDirection="Right">
                <WrapPanel>
                    <Label Content="Find performer" Foreground="White" FontSize="14" />
                    <TextBox Text="{Binding Path=PerformerPattern, UpdateSourceTrigger=PropertyChanged}"
                             Width="120" Height="20"
                             Margin="10,0,3,0" 
                             FontFamily="Stencil" FontSize="14" />
                    <Button Command="{Binding PerformerSearchCommand}" 
                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" 
                            BorderBrush="Transparent" Background="Transparent" 
                            Margin="0,0,10,0">
                        <Image Source="{StaticResource ImagePlayButton}" Height="25"/>
                    </Button>
                    <Label Content="Find album" Foreground="White" FontSize="14" />
                    <TextBox Text="{Binding AlbumPattern, UpdateSourceTrigger=PropertyChanged}"
                             Width="120" Height="20"
                             Margin="10,0,3,0" 
                             FontFamily="Stencil" FontSize="14" />
                    <Button Command="{Binding AlbumSearchCommand}" 
                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" 
                            BorderBrush="Transparent" Background="Transparent" 
                            Margin="0,0,10,0">
                        <Image Source="{StaticResource ImagePlayButton}" Height="25"/>
                    </Button>
                </WrapPanel>
            </Expander>
            <!-- ...and navigation panel (for selecting the portion of data to display, e.g. 1 2 3 (1 - show first 10 records)) -->
            <WrapPanel HorizontalAlignment="Right" VerticalAlignment="Center" DockPanel.Dock="Right">
                <ItemsControl ItemsSource="{Binding Path=PageCollection}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <TextBlock>
                            <Hyperlink Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}},
                                       Path=DataContext.IndexPageCommand}"
                                       CommandParameter="{Binding Text}"
                                       TextDecorations="None">
                                <TextBlock Text="{Binding Text}"
                                           Style="{StaticResource IndexPageStyle}"
                                           Foreground="Yellow" Background="Transparent"
                                           Cursor="Hand"
                                           VerticalAlignment="Center">
                                </TextBlock>
                            </Hyperlink>
                            </TextBlock>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </WrapPanel>
        </DockPanel>
    </Grid>
</Window>
