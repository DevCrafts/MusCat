<Window x:Class="MusCat.Views.AlbumWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:converters="clr-namespace:MusCat.Converters"
        xmlns:controls="clr-namespace:MusCat.Controls"
        SizeToContent="WidthAndHeight"
        BorderBrush="AliceBlue"
        Title="{Binding AlbumHeader}">
    <Window.Background>
        <LinearGradientBrush>
            <GradientStop Color="#001122" Offset="0" />
            <GradientStop Color="#ffffff" Offset="3"/>
        </LinearGradientBrush>
    </Window.Background>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding WindowClosingCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <!-- GUI parameters -->
        <sys:Double x:Key="AlbumWidth">300</sys:Double>
        <sys:Double x:Key="AlbumHeight">300</sys:Double>
        <!-- Converters -->
        <converters:PhotoConverter x:Key="AlbumImageConverter"/>
        <converters:RateConverter x:Key="AlbumRateConverter"/>
        
        <DataTemplate x:Key="SongTemplate">
            <WrapPanel>
                <Label Content="{Binding Path=TrackNo}"
                       Foreground="White"
                       FontSize="12"/>
                <Label Content="{Binding Path=Name}"
                       Foreground="White"
                       FontSize="17"/>
                <Label Content="{Binding Path=TimeLength}"
                       Foreground="LightGreen"/>
            </WrapPanel>
        </DataTemplate>
        
        <DataTemplate x:Key="SelectedSongTemplate">
            <StackPanel>
                <WrapPanel HorizontalAlignment="Center"
                           Background="Transparent"
                           Margin="0,20,0,0">
                    <Label Content="{Binding Path=TrackNo}"
                           Foreground="#f2d479"
                           FontSize="17" FontWeight="ExtraBold"/>
                    <Label Content="{Binding Path=Name}"
                           Foreground="#f2d479"
                           FontSize="22" FontWeight="ExtraBold"/>
                    <Label Content="{Binding Path=TimeLength}"
                           Foreground="LightGreen"
                           FontSize="17" FontWeight="ExtraBold"/>
                </WrapPanel>
                <DockPanel DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext}"
                           Background="Transparent" Margin="0,0,0,20" HorizontalAlignment="Center">
                    <Image Source="{Binding Path=PlaybackImage, UpdateSourceTrigger=PropertyChanged}"
                           Width="32" Height="32">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDown">
                                <i:InvokeCommandAction Command="{Binding Path=PlaybackCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Image>
                    <Slider Style="{StaticResource SliderStyle}"
                            Value="{Binding Path=PlaybackPercentage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Width="300"
                            VerticalAlignment="Center">
                        <!-- this code was added only to follow the pure MVVM -->
                        <!-- the triggers aren't necessary: we could add only one simple handler of the Thumb.DragCompleted event -->
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="ValueChanged">
                                <i:InvokeCommandAction Command="{Binding Path=SeekPlaybackPositionCommand}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction Command="{Binding Path=StartDragCommand}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="PreviewMouseUp">
                                <i:InvokeCommandAction Command="{Binding Path=StopDragCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Slider>
                </DockPanel>
            </StackPanel>
        </DataTemplate>

        <Style x:Key="SongStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="ContentTemplate" Value="{StaticResource SongTemplate}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Grid HorizontalAlignment="Center">
                            <Border x:Name="Border" Background="Transparent"/>
                            <ContentPresenter />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ListBoxItem.IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderThickness" Value="0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="ContentTemplate" Value="{StaticResource SelectedSongTemplate}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="350" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Column="0">
            <Image Source="{Binding Converter={StaticResource AlbumImageConverter}, ConverterParameter={StaticResource AlbumHeight}}"
                   Width="{StaticResource AlbumWidth}" Height="{StaticResource AlbumHeight}"
                   Margin="10,25,0,0" 
                   HorizontalAlignment="Center" VerticalAlignment="Top">
                <Image.Effect>
                    <DropShadowEffect Color="Black" BlurRadius="20"/>
                </Image.Effect>
            </Image>
            <DockPanel>
                <DockPanel HorizontalAlignment="Left" Margin="15,0,0,0">
                    <StackPanel>
                        <TextBlock Text="{Binding Path=Rate, Converter={StaticResource AlbumRateConverter}}"
                                   Foreground="Black" Background="Orange"
                                   FontSize="18" FontFamily="Arial Narrow"
                                   Padding="5" Margin="0,0,7,0">
                            <TextBlock.Effect>
                                <DropShadowEffect Color="LightGoldenrodYellow" BlurRadius="5" Opacity=".25"/>
                            </TextBlock.Effect>
                        </TextBlock>
                    </StackPanel>
                    <controls:RateStarsControl Rate="{Binding Path=Rate}" Height="25" Width="125">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDown">
                                <i:InvokeCommandAction Command="{Binding Path=UpdateRateCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </controls:RateStarsControl>
                </DockPanel>
                <Label Content="{Binding Path=TotalTime}"
                       Background="Maroon" Foreground="White"
                       Width="auto"
                       HorizontalAlignment="Right" Margin="0,-10,15,0" 
                       FontSize="24" FontFamily="Broadway">
                    <Label.RenderTransform>
                        <RotateTransform Angle="-10"/>
                    </Label.RenderTransform>
                    <Label.Effect>
                        <DropShadowEffect Color="White" Opacity=".25" BlurRadius="5"/>
                    </Label.Effect>
                </Label>
            </DockPanel>
            <StackPanel>
                <TextBlock Text="{Binding Path=Performer.Name}"
                           TextWrapping="Wrap" TextAlignment="Center"
                           FontFamily="Stencil" FontSize="22"
                           Foreground="AntiqueWhite" 
                           Margin="20,20,20,10"
                           HorizontalAlignment="Center" />
                <TextBlock Text="{Binding Path=Name}" 
                           TextWrapping="Wrap" TextAlignment="Center"
                           FontFamily="Arial Narrow" FontSize="20"
                           Foreground="AntiqueWhite"
                           HorizontalAlignment="Center" />
                <TextBlock Text="{Binding Path=ReleaseYear}"
                           FontFamily="Broadway" FontSize="18"
                           Foreground="AntiqueWhite"
                           Margin="20,10,20,25"
                           HorizontalAlignment="Center" />
            </StackPanel>
        </StackPanel>
        
        <ListBox Grid.Column="1"
                 ItemsSource="{Binding Songs}"
                 ItemContainerStyle="{StaticResource SongStyle}"
                 SelectedValue="{Binding Path=SelectedSong, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 IsSynchronizedWithCurrentItem="True"
                 HorizontalAlignment="Left" VerticalAlignment="Top"
                 HorizontalContentAlignment="Center"
                 Margin="10,25,10,10" 
                 Padding="20,20,20,20"
                 Width="auto" Height="auto"
                 BorderBrush="Transparent">
            <ListBox.Background>
                <ImageBrush ImageSource="../Images/vinyl_blue.png" Opacity=".1" Stretch="Uniform"/>
            </ListBox.Background>
            <ListBox.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent"/>
            </ListBox.Resources>
        </ListBox>
    </Grid>
</Window>
