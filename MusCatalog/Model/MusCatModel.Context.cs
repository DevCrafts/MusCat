//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MusCatalog.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class MusCatEntities : DbContext
    {
        public MusCatEntities()
            : base("name=MusCatEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Album> Albums { get; set; }
        public DbSet<Country> Countries { get; set; }
        public DbSet<Genre> Genres { get; set; }
        public DbSet<Lineup> Lineups { get; set; }
        public DbSet<Musician> Musicians { get; set; }
        public DbSet<Performer> Performers { get; set; }
        public DbSet<Song> Songs { get; set; }
    
        public virtual int DeleteAlbumByID(Nullable<int> original_AID)
        {
            var original_AIDParameter = original_AID.HasValue ?
                new ObjectParameter("Original_AID", original_AID) :
                new ObjectParameter("Original_AID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteAlbumByID", original_AIDParameter);
        }
    
        public virtual int DeletePerformerByID(Nullable<int> original_PID)
        {
            var original_PIDParameter = original_PID.HasValue ?
                new ObjectParameter("Original_PID", original_PID) :
                new ObjectParameter("Original_PID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePerformerByID", original_PIDParameter);
        }
    
        public virtual int UpdateAlbumsWithoutTime()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAlbumsWithoutTime");
        }
    }
}
